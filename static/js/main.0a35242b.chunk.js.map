{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","console","log","firstDate","Date","first_air_date","genres","i","push","name","descr","overview","slice","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","blackHeader","setBlackHeader","useEffect","loadAll","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","scrollListener","scrollY","addEventListener","removeEventListener","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAAMA,EAAU,mCAIVC,EAAU,iDAAG,WAAOC,GAAQ,mGACZC,MAAM,GAAD,OAJV,gCAIsB,OAAGD,IAAY,KAAD,EAAxC,OAAHE,EAAG,gBACUA,EAAIC,OAAO,KAAD,EAAnB,OAAJA,EAAI,yBACHA,GAAI,2CACd,gBAJe,sCAMD,GACXC,YAAY,WAAD,sCAAE,wGAKYL,EAAW,wDAAD,OAAyDD,IAAU,OAArF,OAAqF,kBAF1FO,KAAM,YACNC,MAAO,uBACPC,MAAM,EAAD,aAKQR,EAAW,6CAAD,OAA8CD,IAAU,OAA1E,OAA0E,kBAF/EO,KAAM,WACNC,MAAO,4BACPC,MAAM,EAAD,cAKQR,EAAW,2CAAD,OAA4CD,IAAU,QAAxE,OAAwE,kBAF7EO,KAAM,WACNC,MAAO,UACPC,MAAM,EAAD,cAKQR,EAAW,yDAAD,OAA0DD,IAAU,QAAtF,OAAsF,kBAF3FO,KAAM,SACNC,MAAO,aACPC,MAAM,EAAD,cAKQR,EAAW,yDAAD,OAA0DD,IAAU,QAAtF,OAAsF,kBAF3FO,KAAM,SACNC,MAAO,aACPC,MAAM,EAAD,cAKQR,EAAW,yDAAD,OAA0DD,IAAU,QAAtF,OAAsF,oBAF3FO,KAAM,SACNC,MAAO,SACPC,MAAM,EAAD,eAKQR,EAAW,4DAAD,OAA6DD,IAAU,QAAzF,OAAyF,oBAF9FO,KAAM,UACNC,MAAO,UACPC,MAAM,EAAD,eAKQR,EAAW,yDAAD,OAA0DD,IAAU,QAAtF,OAAsF,oBAF3FO,KAAM,cACNC,MAAO,mBACPC,MAAM,EAAD,iHAGhB,kDA3CW,GA6CZC,aAAa,WAAD,sCAAE,WAAOC,EAASC,GAAI,iFAEhB,GAAVC,EAAO,CAAC,GAETF,EAAQ,CAAD,qBACCC,EAAI,OACF,UADE,KACK,EAGP,OAHO,KAGH,kCAFQX,EAAW,UAAD,OAAWU,EAAO,mCAA2BX,IAAU,OAGH,QAAvE,OAAJa,EAAI,4BAHA,wBAGSZ,EAAW,OAAD,OAAQU,EAAO,mCAA2BX,IAA7D,QAGO,OAAXa,EAAO,KAAI,sDAKhBA,GAAI,4CACd,qDAnBY,I,iDClDF,cAAqB,IAAnBL,EAAK,EAALA,MAAOC,EAAK,EAALA,MAEpB,EAA8BK,oBAAU,KAAI,mBAArCC,EAAO,KAAEC,EAAU,KAoB1B,OACI,sBAAKC,UAAU,WAAU,UACrB,6BAAKT,IACL,qBAAKS,UAAU,iBAAiBC,QArBhB,WACpB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAa,GAC9CJ,EAAI,IACHA,EAAI,GAERH,EAAWG,EACf,EAeiE,SACrD,cAAC,IAAkB,CAACK,MAAO,CAACC,SAAU,QAE1C,qBAAKR,UAAU,kBAAkBC,QAhBhB,WACrB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAa,GAC7CG,EAA+B,IAAvBjB,EAAMkB,QAAQC,OACtBN,OAAOC,WAAaG,EAASP,IAC7BA,EAAKG,OAAOC,WAAaG,EAAS,IAEtCV,EAAWG,EAEf,EAQmE,SACvD,cAAC,IAAgB,CAACK,MAAO,CAACC,SAAU,QAExC,qBAAKR,UAAU,qBAAoB,SAC/B,qBAAKA,UAAU,iBAAiBO,MAAO,CACnCK,WAAYd,EACZe,MAA8B,IAAvBrB,EAAMkB,QAAQC,QACvB,SACGnB,EAAMkB,QAAQC,OAAS,GAAKnB,EAAMkB,QAAQI,KAAI,SAACC,EAAMC,GAAG,OACrD,qBAAehB,UAAU,iBAAgB,SACrC,qBAAKiB,IAAG,yCAAoCF,EAAKG,aAAeC,IAAKJ,EAAKK,kBADpEJ,EAEJ,UAM7B,EChDc,G,MAAA,YAAa,IAAXD,EAAI,EAAJA,KAEbM,QAAQC,IAAIP,GAEZ,IAAIQ,EAAY,IAAIC,KAAKT,EAAKU,gBAC1BC,EAAS,GACb,IAAI,IAAIC,KAAKZ,EAAKW,OACdA,EAAOE,KAAKb,EAAKW,OAAOC,GAAGE,MAG/B,IAAIC,EAAQf,EAAKgB,SAKjB,OAJGD,EAAMnB,OAAS,MACdmB,EAAQA,EAAME,MAAM,EAAG,KAAO,OAI9B,yBAAShC,UAAU,WAAWO,MAAO,CACjC0B,eAAgB,QAChBC,mBAAoB,SACpBC,gBAAgB,0CAAD,OAA4CpB,EAAKqB,cAAa,MAC/E,SACE,qBAAKpC,UAAU,qBAAoB,SAC/B,sBAAKA,UAAU,uBAAsB,UACjC,qBAAKA,UAAU,iBAAgB,SAAEe,EAAKsB,gBACtC,sBAAKrC,UAAU,iBAAgB,UAC3B,sBAAKA,UAAU,mBAAkB,UAAEe,EAAKuB,aAAY,aACpD,qBAAKtC,UAAU,iBAAgB,SAAEuB,EAAUgB,gBAC3C,sBAAKvC,UAAU,oBAAmB,UAAEe,EAAKyB,kBAAiB,aAAuC,IAA3BzB,EAAKyB,kBAA0B,IAAM,SAE/G,qBAAKxC,UAAU,wBAAuB,SAAE8B,IACxC,sBAAK9B,UAAU,oBAAmB,UAC9B,mBAAGyC,KAAI,iBAAY1B,EAAK2B,IAAM1C,UAAU,wBAAuB,6BAC/D,mBAAGyC,KAAI,oBAAe1B,EAAK2B,IAAM1C,UAAU,yBAAwB,8BAEvE,sBAAKA,UAAU,mBAAkB,UAAC,+CAA2B0B,EAAOiB,KAAK,eAK5F,GCvCc,G,MAAA,YAAc,IAAZC,EAAK,EAALA,MACb,OACI,yBAAQ5C,UAAW4C,EAAQ,QAAU,GAAG,UACpC,qBAAK5C,UAAU,eAAc,SACzB,mBAAGyC,KAAK,IAAG,SACP,qBAAKxB,IAAI,yEAAyEE,IAAI,gBAG9F,qBAAKnB,UAAU,eAAc,SACzB,mBAAGyC,KAAK,IAAG,SACP,qBAAKxB,IAAI,0FAA0FE,IAAI,kBAK1H,GCXc,G,MAAA,WAEX,MAAkCtB,mBAAS,IAAG,mBAAvCgD,EAAS,KAAEC,EAAY,KAC9B,EAAwCjD,mBAAS,MAAK,mBAA/CkD,EAAY,KAAEC,EAAe,KACpC,EAAsCnD,oBAAS,GAAM,mBAA9CoD,EAAW,KAAEC,EAAc,KAuClC,OApCAC,qBAAU,WACN,IAAMC,EAAO,iDAAG,sHAEKC,EAAKhE,cAAc,KAAD,EAMkB,OANjDiE,EAAI,OACRR,EAAaQ,GAGTC,EAAYD,EAAKE,QAAO,SAAA7B,GAAC,MAAe,cAAXA,EAAErC,IAAoB,IACnDmE,EAAetD,KAAKuD,MAAMvD,KAAKwD,UAAYJ,EAAU,GAAG/D,MAAMkB,QAAQC,OAAS,IAC/EiD,EAASL,EAAU,GAAG/D,MAAMkB,QAAQ+C,GAAc,EAAD,OAC9BJ,EAAK5D,aAAamE,EAAOlB,GAAI,MAAK,OAArDmB,EAAU,OAEdb,EAAgBa,GAAY,4CAC/B,kBAZY,mCAcbT,GAEJ,GAAG,IAEHD,qBAAU,WACN,IAAMW,EAAiB,WAChBzD,OAAO0D,QAAU,GAChBb,GAAe,GAGfA,GAAe,EAEvB,EAIA,OAFA7C,OAAO2D,iBAAiB,SAAUF,GAE3B,WACHzD,OAAO4D,oBAAoB,SAAUH,EACzC,CACJ,GAAG,IAIC,sBAAK9D,UAAU,OAAM,UAEjB,cAAC,EAAM,CAAC4C,MAAOK,IAEdF,GACG,cAAC,EAAa,CAAChC,KAAMgC,IAIzB,yBAAS/C,UAAU,QAAO,SACrB6C,EAAU/B,KAAI,SAACC,EAAMC,GAAG,OACrB,cAAC,EAAQ,CAAWzB,MAAOwB,EAAKxB,MAAOC,MAAOuB,EAAKvB,OAApCwB,EAA4C,MAInE,iCACI,sBAAKhB,UAAU,kBAAiB,6BACZ,oBAAGyC,KAAK,iNAAgN,cAAE,6CAAyB,uBAAM,yBACnP,+CAA0B,uBACjD,oBAAGA,KAAK,sDAAqD,cAAE,oDAA+B,OAAK,4BAIzGI,EAAUlC,QAAU,GACjB,qBAAKX,UAAU,UAAS,SACpB,qBAAKiB,IAAI,uEAAuEJ,MAAM,MAAOM,IAAI,mBAOpH,GChFD+C,IAASC,OACP,cAAC,IAAMC,WAAU,UACf,cAAC,EAAG,MAENC,SAASC,eAAe,Q","file":"static/js/main.0a35242b.chunk.js","sourcesContent":["const API_KEY = '916db4f7a38d6d4c7f031190926bd7c0';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais da NetFlix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Açåo',\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentários',\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\n            },\n        ]\n    },\n\n    getMovieInfo: async (movieId, type) => {\n\n        let info = {};\n\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                break\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\n                break\n                default:\n                    info = null\n                break\n            }\n        }\n\n        return info\n    }\n}","import React, { useState } from \"react\";\nimport \"./MovieRow.css\"\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\n\nexport default ({title, items}) => {\n\n    const [scrollX, setScrollX] = useState(-400)\n\n    const handleLeftArrow = () => {\n        let x = scrollX + Math.round(window.innerWidth / 2);\n        if(x > 0) {\n            x = 0;\n        }\n        setScrollX(x);\n    }\n\n    const handleRightArrow = () => {\n        let x = scrollX - Math.round(window.innerWidth / 2);\n        let listW = items.results.length * 150;\n        if((window.innerWidth - listW) > x) {\n            x = (window.innerWidth - listW) - 60;\n        }\n        setScrollX(x)\n\n    }\n\n    return (\n        <div className=\"movieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\" onClick={handleLeftArrow}>\n                <NavigateBeforeIcon style={{fontSize: 50}}/>\n            </div>\n            <div className=\"movieRow--right\" onClick={handleRightArrow}>\n                <NavigateNextIcon style={{fontSize: 50}}/>\n            </div>\n            <div className=\"movieRow--listarea\">\n                <div className=\"movieRow--list\" style={{\n                    marginLeft: scrollX,\n                    width: items.results.length * 150\n                }}> \n                    {items.results.length > 0 && items.results.map((item, key) => (\n                        <div key={key} className=\"movieRow--item\">\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title}/>\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport \"./FeaturedMovie.css\";\n\nexport default ({item}) => {\n\n    console.log(item);\n\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n    for(let i in item.genres) {\n        genres.push(item.genres[i].name)\n    }\n\n    let descr = item.overview;\n    if(descr.length > 200) {\n        descr = descr.slice(0, 199) + '...';\n    }\n\n    return (\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">{item.original_name}</div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\n                    </div>\n                    <div className=\"featured--description\">{descr}</div>\n                    <div className=\"featured--buttons\">\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">▶ Assistir</a>\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\n                    </div>\n                    <div className=\"featured--genres\"><strong>Generos: </strong>{genres.join(', ')}</div>\n                </div>\n            </div>\n        </section>\n    )\n}\n\n","import React from \"react\";\nimport \"./Header.css\"\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"/\">\n                    <img src=\"https://logodownload.org/wp-content/uploads/2014/10/netflix-logo-5.png\" alt=\"Netflix\"></img>\n                </a>\n            </div>\n            <div className=\"header--user\">\n                <a href=\"/\">\n                    <img src=\"https://mir-s3-cdn-cf.behance.net/project_modules/disp/1bdc9a33850498.56ba69ac2ba5b.png\" alt=\"Profile\"></img>\n                </a>\n            </div>\n        </header>\n    );\n}","import React, {useEffect, useState} from \"react\";\nimport Tmdb from \"./Tmdb\";\nimport MovieRow from \"./components/MovieRow\";\nimport FeaturedMovie from \"./components/FeaturedMovie\";\nimport Header from \"./components/Header\";\nimport \"./App.css\"\n\nexport default () => {\n\n    const [movieList, setMovieList] = useState([]);\n    const [featuredData, setFeaturedData] = useState(null)\n    const [blackHeader, setBlackHeader] = useState(false)\n\n\n    useEffect(() => {\n        const loadAll = async () => {\n            //get list\n            let list = await Tmdb.getHomeList();\n            setMovieList(list);\n            \n            //get featured\n            let originals = list.filter(i => i.slug === 'originals');\n            let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n            let chosen = originals[0].items.results[randomChosen];\n            let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv')\n\n            setFeaturedData(chosenInfo);\n        }\n\n        loadAll()\n\n    }, []);\n\n    useEffect(() => {\n        const scrollListener = () => {\n            if(window.scrollY > 10) {\n                setBlackHeader(true)\n            }\n            else {\n                setBlackHeader(false)\n            }\n        }\n\n        window.addEventListener('scroll', scrollListener);\n\n        return () => {\n            window.removeEventListener('scroll', scrollListener);\n        }\n    }, []);\n\n    return (\n\n        <div className=\"page\">\n\n            <Header black={blackHeader}/>\n\n            {featuredData &&\n                <FeaturedMovie item={featuredData}/>\n            }\n            \n            \n            <section className=\"lists\">\n                {movieList.map((item, key) => (\n                    <MovieRow key={key} title={item.title} items={item.items}/>\n                ))}\n            </section>\n\n            <footer>\n                <div className=\"footer--content\">\n                    API utilizada - <a href=\"https://www.google.com/url?sa=t&rct=j&q=&esrc=s&source=web&cd=&cad=rja&uact=8&ved=2ahUKEwiYkoTqxc3zAhWurJUCHUJ7BOsQFnoECBEQAQ&url=https%3A%2F%2Fdevelopers.themoviedb.org%2F3&usg=AOvVaw1EE8OsHDg8JkR4SrWGHSPw\"> <strong>TMDB</strong></a><br />\n                    Direitos de imagens - <strong> Netflix </strong><br />\n                   <a href=\"https://www.linkedin.com/in/rodolfo-belo-5786b21a0/\"> <strong> Rodolfo Belo </strong> </a><br />\n                </div>\n            </footer>\n\n            {movieList.length <= 0 &&\n                <div className=\"loading\">\n                    <img src=\"https://media.filmelier.com/noticias/br/2020/03/Netflix_LoadTime.gif\" width=\"500\"  alt=\"Carregando\"></img>\n                </div>\n            }      \n        </div>\n    )\n\n    \n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}